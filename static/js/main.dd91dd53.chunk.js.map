{"version":3,"sources":["cards/Cards.js","components/Main.js","components/Modal.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["shuffle","array","length","newArray","JSON","parse","stringify","i","j","Math","floor","random","temp","deck","used","unused","setUsed","setUnused","initialize","size","cards","k","r","round","g","b","push","generateCards","shuffleBoth","transfer","color","filter","col","getUsed","getUnused","Main","props","isFinished","setIsFinished","score","setScore","useEffect","setCards","getCards","processClick","e","target","style","backgroundColor","indexOf","numUsed","result","key","map","onClick","useState","className","Modal","highScore","hasWon","setHasWon","Header","title","App","setHighScore","pow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd91dd53.chunk.js","sourcesContent":["const generateCards = size => {\n  if (!size || size < 2) return 1;\n  const cards = [];\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      for (let k = 0; k < size; k++) {\n        const r = Math.round((i * 255) / (size - 1));\n        const g = Math.round((j * 255) / (size - 1));\n        const b = Math.round((k * 255) / (size - 1));\n        cards.push(`rgb(${r}, ${g}, ${b})`);\n      }\n    }\n  }\n  return cards;\n};\n\nconst shuffle = array => {\n  if (array.length === 0) return array;\n  const newArray = JSON.parse(JSON.stringify(array));\n  for (let i = newArray.length - 1; i > 0; i--) {\n    // Get a random index between 0 and the current\n    let j = Math.floor(Math.random() * (i + 1));\n    // Swap the elements at current and random indexes\n    let temp = newArray[i];\n    newArray[i] = newArray[j];\n    newArray[j] = temp;\n  }\n  return newArray;\n};\n\nexport { generateCards, shuffle };\n","import React, { useState, useEffect } from 'react';\nimport { generateCards, shuffle } from '../cards/Cards';\n\nconst deck = (() => {\n  let used;\n  let unused;\n\n  const initialize = size => {\n    used = [];\n    unused = shuffle(generateCards(size));\n  };\n\n  const shuffleBoth = () => {\n    used = shuffle(used);\n    unused = shuffle(unused);\n  };\n\n  const transfer = color => {\n    setUnused(unused.filter(col => col !== color));\n    setUsed([...used, color]);\n  };\n\n  const getUsed = () => {\n    return used;\n  };\n\n  const setUsed = array => {\n    used = array;\n  };\n\n  const getUnused = () => {\n    return unused;\n  };\n\n  const setUnused = array => {\n    unused = array;\n  };\n\n  return {\n    initialize,\n    shuffleBoth,\n    transfer,\n    getUsed,\n    setUsed,\n    getUnused,\n    setUnused,\n  };\n})();\n\nfunction Main(props) {\n  const { size, isFinished, setIsFinished, score, setScore } = props;\n\n  useEffect(() => {\n    if (!isFinished) {\n      setCards(getCards());\n    }\n  }, [score, isFinished]);\n\n  const processClick = e => {\n    if (isFinished) {\n      return;\n    }\n\n    const used = deck.getUsed();\n\n    const color = e.target.style.backgroundColor;\n    if (used.indexOf(color) === -1) {\n      deck.transfer(color);\n      setScore(score + 1);\n    } else {\n      setIsFinished(true);\n    }\n  };\n\n  const getCards = () => {\n    deck.shuffleBoth();\n\n    const used = deck.getUsed();\n    const unused = deck.getUnused();\n\n    // Determine how many used colors to include between 0 and used.length (max: 8)\n    let numUsed = Math.floor(Math.random() * used.length);\n    // Cap used cards at 8 so there is always 1 unused\n    if (numUsed > 8) numUsed = 8;\n    // Never allow more unused cards than remain\n    if (9 - numUsed > unused.length) numUsed = 9 - unused.length;\n\n    let result = [];\n    for (let i = 0; i < numUsed; i++) {\n      result.push(used[i]);\n    }\n    for (let i = 0; i < 9 - numUsed; i++) {\n      result.push(unused[i]);\n    }\n\n    result = shuffle(result);\n\n    let key = 0;\n    result = result.map(color => {\n      key += 1;\n      return (\n        <div\n          key={key}\n          onClick={processClick}\n          style={{ backgroundColor: color }}\n        ></div>\n      );\n    });\n\n    return result;\n  };\n\n  const [cards, setCards] = useState(() => getCards(props));\n\n  return (\n    <div>\n      <div className=\"card-container\">{cards}</div>\n    </div>\n  );\n}\n\nexport default Main;\nexport { deck };\n","import React from 'react';\nimport { deck } from '../components/Main';\n\nfunction Modal(props) {\n  const { size, score, highScore, setScore, setIsFinished, hasWon, setHasWon } =\n    props;\n\n  return hasWon ? (\n    <div className=\"modal-container\">\n      <div className=\"modal\">\n        <h2>You win!</h2>\n        <div>Score: {score}</div>\n        <div>High Score: {highScore}</div>\n        <button\n          onClick={() => {\n            deck.initialize(size);\n            setScore(0);\n            setHasWon(false);\n            setIsFinished(false);\n          }}\n        >\n          Play again\n        </button>\n      </div>\n    </div>\n  ) : (\n    <div className=\"modal-container\">\n      <div className=\"modal\">\n        <h2>Game Over</h2>\n        <div>Score: {score}</div>\n        <div>High Score: {highScore}</div>\n        <button\n          onClick={() => {\n            deck.initialize(size);\n            setScore(0);\n            setIsFinished(false);\n          }}\n        >\n          Play again\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\n\nfunction Header(props) {\n  const { title, score, highScore } = props;\n\n  return (\n    <div className=\"header\">\n      <h1>{title}</h1>\n      <div className=\"scoreboard\">\n        <div>{`Score: ${score}`}</div>\n        <div>{`High score: ${highScore}`}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useEffect } from 'react/cjs/react.development';\nimport './App.css';\nimport Modal from './components/Modal';\nimport Header from './components/Header';\nimport Main, { deck } from './components/Main';\n\nconst size = 3;\ndeck.initialize(size);\n\nfunction App() {\n  const [hasWon, setHasWon] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n    }\n    if (score === Math.pow(size, 3)) {\n      setIsFinished(true);\n      setHasWon(true);\n    }\n  }, [score, highScore]);\n\n  return (\n    <div className=\"App\">\n      {isFinished ? (\n        <Modal\n          size={size}\n          hasWon={hasWon}\n          setHasWon={setHasWon}\n          score={score}\n          highScore={highScore}\n          setScore={setScore}\n          setIsFinished={setIsFinished}\n        />\n      ) : (\n        <div />\n      )}\n      <Header\n        isFinished={isFinished}\n        score={score}\n        highScore={highScore}\n        title=\"Don't pick the same color twice!\"\n      />\n      <Main\n        size={size}\n        isFinished={isFinished}\n        setIsFinished={setIsFinished}\n        score={score}\n        setScore={setScore}\n        highScore={highScore}\n        setHighScore={setHighScore}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}